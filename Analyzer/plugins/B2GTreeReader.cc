#ifndef B2GTreeReader_h
#define B2GTreeReader_h

#include "TFile.h"
#include "TTree.h"

// Data Class storing ntuple variables
#include "../interface/Data.h"

class B2GTreeReader {
public:
  B2GTreeReader() {}
  ~B2GTreeReader() {}
  
  Data data;
  
  void Load_Tree(TFile &f, const char* name = "B2GTTreeMaker/B2GTree") {
    tree_ = (TTree*)f.Get(name);
    bool debug = false;

    tree_->GetBranch("el_size")->SetAddress(&data.ele.size);
    tree_->GetBranch("el_Mass")->SetAddress(&data.ele.Mass);
    tree_->GetBranch("el_Pt")->SetAddress(&data.ele.Pt);
    tree_->GetBranch("el_Eta")->SetAddress(&data.ele.Eta);
    tree_->GetBranch("el_Y")->SetAddress(&data.ele.Y);
    tree_->GetBranch("el_Phi")->SetAddress(&data.ele.Phi);
    tree_->GetBranch("el_E")->SetAddress(&data.ele.E);
    tree_->GetBranch("el_Charge")->SetAddress(&data.ele.Charge);
    tree_->GetBranch("el_Iso03")->SetAddress(&data.ele.Iso03);
    tree_->GetBranch("el_D0")->SetAddress(&data.ele.D0);
    tree_->GetBranch("el_Dz")->SetAddress(&data.ele.Dz);
    tree_->GetBranch("el_dEtaIn")->SetAddress(&data.ele.dEtaIn);
    tree_->GetBranch("el_dPhiIn")->SetAddress(&data.ele.dPhiIn);
    tree_->GetBranch("el_HoE")->SetAddress(&data.ele.HoE);
    tree_->GetBranch("el_full5x5siee")->SetAddress(&data.ele.full5x5siee);
    tree_->GetBranch("el_ooEmooP")->SetAddress(&data.ele.ooEmooP);
    tree_->GetBranch("el_missHits")->SetAddress(&data.ele.missHits);
    tree_->GetBranch("el_hasMatchedConVeto")->SetAddress(&data.ele.hasMatchedConVeto);
    tree_->GetBranch("el_isEB")->SetAddress(&data.ele.isEB);
    tree_->GetBranch("el_isVeto")->SetAddress(&data.ele.isVeto);
    tree_->GetBranch("el_isLoose")->SetAddress(&data.ele.isLoose);
    tree_->GetBranch("el_isTight")->SetAddress(&data.ele.isTight);
    tree_->GetBranch("el_isMedium")->SetAddress(&data.ele.isMedium);
    tree_->GetBranch("el_scEta")->SetAddress(&data.ele.scEta);
    if (debug) std::cout<<"B2GTreeReader: electrons loaded"<<std::endl;
    
    tree_->GetBranch("mu_size")->SetAddress(&data.mu.size);
    tree_->GetBranch("mu_Mass")->SetAddress(&data.mu.Mass);
    tree_->GetBranch("mu_Pt")->SetAddress(&data.mu.Pt);
    tree_->GetBranch("mu_Eta")->SetAddress(&data.mu.Eta);
    tree_->GetBranch("mu_Y")->SetAddress(&data.mu.Y);
    tree_->GetBranch("mu_Phi")->SetAddress(&data.mu.Phi);
    tree_->GetBranch("mu_E")->SetAddress(&data.mu.E);
    tree_->GetBranch("mu_Charge")->SetAddress(&data.mu.Charge);
    tree_->GetBranch("mu_Iso04")->SetAddress(&data.mu.Iso04);
    tree_->GetBranch("mu_D0")->SetAddress(&data.mu.D0);
    tree_->GetBranch("mu_D0err")->SetAddress(&data.mu.D0err);
    tree_->GetBranch("mu_Dxy")->SetAddress(&data.mu.Dxy);
    tree_->GetBranch("mu_Dxyerr")->SetAddress(&data.mu.Dxyerr);
    tree_->GetBranch("mu_Dz")->SetAddress(&data.mu.Dz);
    tree_->GetBranch("mu_Dzerr")->SetAddress(&data.mu.Dzerr);
    tree_->GetBranch("mu_IsLooseMuon")->SetAddress(&data.mu.IsLooseMuon);
    tree_->GetBranch("mu_IsSoftMuon")->SetAddress(&data.mu.IsSoftMuon);
    tree_->GetBranch("mu_IsTightMuon")->SetAddress(&data.mu.IsTightMuon);
    tree_->GetBranch("mu_IsPFMuon")->SetAddress(&data.mu.IsPFMuon);
    tree_->GetBranch("mu_IsGlobalMuon")->SetAddress(&data.mu.IsGlobalMuon);
    tree_->GetBranch("mu_IsTrackerMuon")->SetAddress(&data.mu.IsTrackerMuon);
    tree_->GetBranch("mu_GlbTrkNormChi2")->SetAddress(&data.mu.GlbTrkNormChi2);
    tree_->GetBranch("mu_NumberValidMuonHits")->SetAddress(&data.mu.NumberValidMuonHits);
    tree_->GetBranch("mu_NumberMatchedStations")->SetAddress(&data.mu.NumberMatchedStations);
    tree_->GetBranch("mu_NumberValidPixelHits")->SetAddress(&data.mu.NumberValidPixelHits);
    tree_->GetBranch("mu_NumberTrackerLayers")->SetAddress(&data.mu.NumberTrackerLayers);
    tree_->GetBranch("mu_NumberOfValidTrackerHits")->SetAddress(&data.mu.NumberOfValidTrackerHits);
    tree_->GetBranch("mu_NumberOfPixelLayers")->SetAddress(&data.mu.NumberOfPixelLayers);
    tree_->GetBranch("mu_InTrkNormChi2")->SetAddress(&data.mu.InTrkNormChi2);
    tree_->GetBranch("mu_SumChargedHadronPt")->SetAddress(&data.mu.SumChargedHadronPt);
    tree_->GetBranch("mu_SumNeutralHadronPt")->SetAddress(&data.mu.SumNeutralHadronPt);
    tree_->GetBranch("mu_SumPhotonPt")->SetAddress(&data.mu.SumPhotonPt);
    tree_->GetBranch("mu_SumPUPt")->SetAddress(&data.mu.SumPUPt);
    tree_->GetBranch("mu_GenMuonY")->SetAddress(&data.mu.GenMuonY);
    tree_->GetBranch("mu_GenMuonEta")->SetAddress(&data.mu.GenMuonEta);
    tree_->GetBranch("mu_GenMuonPhi")->SetAddress(&data.mu.GenMuonPhi);
    tree_->GetBranch("mu_GenMuonPt")->SetAddress(&data.mu.GenMuonPt);
    tree_->GetBranch("mu_GenMuonE")->SetAddress(&data.mu.GenMuonE);
    tree_->GetBranch("mu_GenMuonCharge")->SetAddress(&data.mu.GenMuonCharge);
    if (debug) std::cout<<"B2GTreeReader: muons loaded"<<std::endl;
    
    tree_->GetBranch("met_Pt")->SetAddress(&data.met.Pt);
    tree_->GetBranch("met_Phi")->SetAddress(&data.met.Phi);
    tree_->GetBranch("met_Px")->SetAddress(&data.met.Px);
    tree_->GetBranch("met_Py")->SetAddress(&data.met.Py);
    if (debug) std::cout<<"B2GTreeReader: met loaded"<<std::endl;
    
    tree_->GetBranch("jetAK4_size")->SetAddress(&data.jetsAK4.size);
    tree_->GetBranch("jetAK4_Mass")->SetAddress(&data.jetsAK4.Mass);			
    tree_->GetBranch("jetAK4_Pt")->SetAddress(&data.jetsAK4.Pt);
    tree_->GetBranch("jetAK4_Eta")->SetAddress(&data.jetsAK4.Eta);
    tree_->GetBranch("jetAK4_Y")->SetAddress(&data.jetsAK4.Y);
    tree_->GetBranch("jetAK4_Phi")->SetAddress(&data.jetsAK4.Phi);
    tree_->GetBranch("jetAK4_E")->SetAddress(&data.jetsAK4.E);
    tree_->GetBranch("jetAK4_Charge")->SetAddress(&data.jetsAK4.Charge);
    tree_->GetBranch("jetAK4_CSV")->SetAddress(&data.jetsAK4.CSV);
    tree_->GetBranch("jetAK4_CSVV1")->SetAddress(&data.jetsAK4.CSVV1);
    tree_->GetBranch("jetAK4_GenPartonY")->SetAddress(&data.jetsAK4.GenPartonY);
    tree_->GetBranch("jetAK4_GenPartonEta")->SetAddress(&data.jetsAK4.GenPartonEta);
    tree_->GetBranch("jetAK4_GenPartonPhi")->SetAddress(&data.jetsAK4.GenPartonPhi);
    tree_->GetBranch("jetAK4_GenPartonPt")->SetAddress(&data.jetsAK4.GenPartonPt);
    tree_->GetBranch("jetAK4_GenPartonE")->SetAddress(&data.jetsAK4.GenPartonE);
    tree_->GetBranch("jetAK4_GenPartonCharge")->SetAddress(&data.jetsAK4.GenPartonCharge);
    tree_->GetBranch("jetAK4_PartonFlavour")->SetAddress(&data.jetsAK4.PartonFlavour);
    tree_->GetBranch("jetAK4_HadronFlavour")->SetAddress(&data.jetsAK4.HadronFlavour);
    tree_->GetBranch("jetAK4_GenJetY")->SetAddress(&data.jetsAK4.GenJetY);
    tree_->GetBranch("jetAK4_GenJetEta")->SetAddress(&data.jetsAK4.GenJetEta);
    tree_->GetBranch("jetAK4_GenJetPhi")->SetAddress(&data.jetsAK4.GenJetPhi);
    tree_->GetBranch("jetAK4_GenJetPt")->SetAddress(&data.jetsAK4.GenJetPt);
    tree_->GetBranch("jetAK4_GenJetE")->SetAddress(&data.jetsAK4.GenJetE);
    tree_->GetBranch("jetAK4_GenJetCharge")->SetAddress(&data.jetsAK4.GenJetCharge);
    tree_->GetBranch("jetAK4_muonMultiplicity")->SetAddress(&data.jetsAK4.muonMultiplicity);
    tree_->GetBranch("jetAK4_PhotonEnergy")->SetAddress(&data.jetsAK4.PhotonEnergy);
    tree_->GetBranch("jetAK4_ElectronEnergy")->SetAddress(&data.jetsAK4.ElectronEnergy);
    tree_->GetBranch("jetAK4_MuonEnergy")->SetAddress(&data.jetsAK4.MuonEnergy);
    tree_->GetBranch("jetAK4_HFHadronEnergy")->SetAddress(&data.jetsAK4.HFHadronEnergy);
    tree_->GetBranch("jetAK4_HFEMEnergy")->SetAddress(&data.jetsAK4.HFEMEnergy);
    tree_->GetBranch("jetAK4_ChargedHadronMultiplicity")->SetAddress(&data.jetsAK4.ChargedHadronMultiplicity);
    tree_->GetBranch("jetAK4_numberOfDaughters")->SetAddress(&data.jetsAK4.numberOfDaughters);
    tree_->GetBranch("jetAK4_chargedMultiplicity")->SetAddress(&data.jetsAK4.chargedMultiplicity);
    tree_->GetBranch("jetAK4_neutralHadronMultiplicity")->SetAddress(&data.jetsAK4.neutralHadronMultiplicity);
    tree_->GetBranch("jetAK4_neutralHadronEnergy")->SetAddress(&data.jetsAK4.neutralHadronEnergy);
    tree_->GetBranch("jetAK4_neutralEmEnergy")->SetAddress(&data.jetsAK4.neutralEmEnergy);
    tree_->GetBranch("jetAK4_chargedEmEnergy")->SetAddress(&data.jetsAK4.chargedEmEnergy);
    tree_->GetBranch("jetAK4_chargedHadronEnergy")->SetAddress(&data.jetsAK4.chargedHadronEnergy);
    tree_->GetBranch("jetAK4_photonMultiplicity")->SetAddress(&data.jetsAK4.photonMultiplicity);
    tree_->GetBranch("jetAK4_electronMultiplicity")->SetAddress(&data.jetsAK4.electronMultiplicity);
    tree_->GetBranch("jetAK4_HFHadronMultiplicity")->SetAddress(&data.jetsAK4.HFHadronMultiplicity);
    tree_->GetBranch("jetAK4_HFEMMultiplicity")->SetAddress(&data.jetsAK4.HFEMMultiplicity);
    tree_->GetBranch("jetAK4_ChargeMuEnergy")->SetAddress(&data.jetsAK4.ChargeMuEnergy);
    tree_->GetBranch("jetAK4_neutralMultiplicity")->SetAddress(&data.jetsAK4.neutralMultiplicity);
    tree_->GetBranch("jetAK4_jecFactor0")->SetAddress(&data.jetsAK4.jecFactor0);
    tree_->GetBranch("jetAK4_jetArea")->SetAddress(&data.jetsAK4.jetArea);
    tree_->GetBranch("jetAK4_SmearedPt")->SetAddress(&data.jetsAK4.SmearedPt);
    tree_->GetBranch("jetAK4_SmearedPEta")->SetAddress(&data.jetsAK4.SmearedPEta);
    tree_->GetBranch("jetAK4_SmearedPhi")->SetAddress(&data.jetsAK4.SmearedPhi);
    tree_->GetBranch("jetAK4_SmearedE")->SetAddress(&data.jetsAK4.SmearedE);
    tree_->GetBranch("jetAK4_JERup")->SetAddress(&data.jetsAK4.JERup);
    tree_->GetBranch("jetAK4_JERdown")->SetAddress(&data.jetsAK4.JERdown);
    if (debug) std::cout<<"B2GTreeReader: AK4 jets loaded"<<std::endl;
    
    tree_->GetBranch("jetAK8_size")->SetAddress(&data.jetsAK8.size);
    tree_->GetBranch("jetAK8_Mass")->SetAddress(&data.jetsAK8.Mass);			
    tree_->GetBranch("jetAK8_Pt")->SetAddress(&data.jetsAK8.Pt);
    tree_->GetBranch("jetAK8_Eta")->SetAddress(&data.jetsAK8.Eta);
    tree_->GetBranch("jetAK8_Y")->SetAddress(&data.jetsAK8.Y);
    tree_->GetBranch("jetAK8_Phi")->SetAddress(&data.jetsAK8.Phi);
    tree_->GetBranch("jetAK8_E")->SetAddress(&data.jetsAK8.E);
    tree_->GetBranch("jetAK8_Charge")->SetAddress(&data.jetsAK8.Charge);
    tree_->GetBranch("jetAK8_CSV")->SetAddress(&data.jetsAK8.CSV);
    tree_->GetBranch("jetAK8_CSVV1")->SetAddress(&data.jetsAK8.CSVV1);
    tree_->GetBranch("jetAK8_GenPartonY")->SetAddress(&data.jetsAK8.GenPartonY);
    tree_->GetBranch("jetAK8_GenPartonEta")->SetAddress(&data.jetsAK8.GenPartonEta);
    tree_->GetBranch("jetAK8_GenPartonPhi")->SetAddress(&data.jetsAK8.GenPartonPhi);
    tree_->GetBranch("jetAK8_GenPartonPt")->SetAddress(&data.jetsAK8.GenPartonPt);
    tree_->GetBranch("jetAK8_GenPartonE")->SetAddress(&data.jetsAK8.GenPartonE);
    tree_->GetBranch("jetAK8_GenPartonCharge")->SetAddress(&data.jetsAK8.GenPartonCharge);
    tree_->GetBranch("jetAK8_PartonFlavour")->SetAddress(&data.jetsAK8.PartonFlavour);
    tree_->GetBranch("jetAK8_HadronFlavour")->SetAddress(&data.jetsAK8.HadronFlavour);
    tree_->GetBranch("jetAK8_GenJetY")->SetAddress(&data.jetsAK8.GenJetY);
    tree_->GetBranch("jetAK8_GenJetEta")->SetAddress(&data.jetsAK8.GenJetEta);
    tree_->GetBranch("jetAK8_GenJetPhi")->SetAddress(&data.jetsAK8.GenJetPhi);
    tree_->GetBranch("jetAK8_GenJetPt")->SetAddress(&data.jetsAK8.GenJetPt);
    tree_->GetBranch("jetAK8_GenJetE")->SetAddress(&data.jetsAK8.GenJetE);
    tree_->GetBranch("jetAK8_GenJetCharge")->SetAddress(&data.jetsAK8.GenJetCharge);
    tree_->GetBranch("jetAK8_muonMultiplicity")->SetAddress(&data.jetsAK8.muonMultiplicity);
    tree_->GetBranch("jetAK8_PhotonEnergy")->SetAddress(&data.jetsAK8.PhotonEnergy);
    tree_->GetBranch("jetAK8_ElectronEnergy")->SetAddress(&data.jetsAK8.ElectronEnergy);
    tree_->GetBranch("jetAK8_MuonEnergy")->SetAddress(&data.jetsAK8.MuonEnergy);
    tree_->GetBranch("jetAK8_HFHadronEnergy")->SetAddress(&data.jetsAK8.HFHadronEnergy);
    tree_->GetBranch("jetAK8_HFEMEnergy")->SetAddress(&data.jetsAK8.HFEMEnergy);
    tree_->GetBranch("jetAK8_ChargedHadronMultiplicity")->SetAddress(&data.jetsAK8.ChargedHadronMultiplicity);
    tree_->GetBranch("jetAK8_numberOfDaughters")->SetAddress(&data.jetsAK8.numberOfDaughters);
    tree_->GetBranch("jetAK8_chargedMultiplicity")->SetAddress(&data.jetsAK8.chargedMultiplicity);
    tree_->GetBranch("jetAK8_neutralHadronMultiplicity")->SetAddress(&data.jetsAK8.neutralHadronMultiplicity);
    tree_->GetBranch("jetAK8_neutralHadronEnergy")->SetAddress(&data.jetsAK8.neutralHadronEnergy);
    tree_->GetBranch("jetAK8_neutralEmEnergy")->SetAddress(&data.jetsAK8.neutralEmEnergy);
    tree_->GetBranch("jetAK8_chargedEmEnergy")->SetAddress(&data.jetsAK8.chargedEmEnergy);
    tree_->GetBranch("jetAK8_chargedHadronEnergy")->SetAddress(&data.jetsAK8.chargedHadronEnergy);
    tree_->GetBranch("jetAK8_photonMultiplicity")->SetAddress(&data.jetsAK8.photonMultiplicity);
    tree_->GetBranch("jetAK8_electronMultiplicity")->SetAddress(&data.jetsAK8.electronMultiplicity);
    tree_->GetBranch("jetAK8_HFHadronMultiplicity")->SetAddress(&data.jetsAK8.HFHadronMultiplicity);
    tree_->GetBranch("jetAK8_HFEMMultiplicity")->SetAddress(&data.jetsAK8.HFEMMultiplicity);
    tree_->GetBranch("jetAK8_ChargeMuEnergy")->SetAddress(&data.jetsAK8.ChargeMuEnergy);
    tree_->GetBranch("jetAK8_neutralMultiplicity")->SetAddress(&data.jetsAK8.neutralMultiplicity);
    tree_->GetBranch("jetAK8_jecFactor0")->SetAddress(&data.jetsAK8.jecFactor0);
    tree_->GetBranch("jetAK8_jetArea")->SetAddress(&data.jetsAK8.jetArea);
    tree_->GetBranch("jetAK8_SmearedPt")->SetAddress(&data.jetsAK8.SmearedPt);
    tree_->GetBranch("jetAK8_SmearedPEta")->SetAddress(&data.jetsAK8.SmearedPEta);
    tree_->GetBranch("jetAK8_SmearedPhi")->SetAddress(&data.jetsAK8.SmearedPhi);
    tree_->GetBranch("jetAK8_SmearedE")->SetAddress(&data.jetsAK8.SmearedE);
    tree_->GetBranch("jetAK8_JERup")->SetAddress(&data.jetsAK8.JERup);
    tree_->GetBranch("jetAK8_JERdown")->SetAddress(&data.jetsAK8.JERdown);
    tree_->GetBranch("jetAK8_subjetIndex0")->SetAddress(&data.jetsAK8.subjetIndex0);
    tree_->GetBranch("jetAK8_subjetIndex1")->SetAddress(&data.jetsAK8.subjetIndex1);
    tree_->GetBranch("jetAK8_subjetIndex2")->SetAddress(&data.jetsAK8.subjetIndex2);
    tree_->GetBranch("jetAK8_subjetIndex4")->SetAddress(&data.jetsAK8.subjetIndex3);
    tree_->GetBranch("jetAK8_tau1")->SetAddress(&data.jetsAK8.tau1);
    tree_->GetBranch("jetAK8_tau2")->SetAddress(&data.jetsAK8.tau2);
    tree_->GetBranch("jetAK8_tau3")->SetAddress(&data.jetsAK8.tau3);
    tree_->GetBranch("jetAK8_trimmedMass")->SetAddress(&data.jetsAK8.trimmedMass);
    tree_->GetBranch("jetAK8_prunedMass")->SetAddress(&data.jetsAK8.prunedMass);
    tree_->GetBranch("jetAK8_filteredMass")->SetAddress(&data.jetsAK8.filteredMass);
    tree_->GetBranch("jetAK8_topMass")->SetAddress(&data.jetsAK8.topMass);
    tree_->GetBranch("jetAK8_wMass")->SetAddress(&data.jetsAK8.wMass);
    tree_->GetBranch("jetAK8_nSubJets")->SetAddress(&data.jetsAK8.nSubJets);
    tree_->GetBranch("jetAK8_minmass")->SetAddress(&data.jetsAK8.minmass);
    if (debug) std::cout<<"B2GTreeReader: AK8 jets loaded"<<std::endl;
    
    tree_->GetBranch("jetsCmsTopTag_size")->SetAddress(&data.jetsCmsTopTag.size);
    tree_->GetBranch("jetsCmsTopTag_Mass")->SetAddress(&data.jetsCmsTopTag.Mass);			
    tree_->GetBranch("jetsCmsTopTag_Pt")->SetAddress(&data.jetsCmsTopTag.Pt);
    tree_->GetBranch("jetsCmsTopTag_Eta")->SetAddress(&data.jetsCmsTopTag.Eta);
    tree_->GetBranch("jetsCmsTopTag_Y")->SetAddress(&data.jetsCmsTopTag.Y);
    tree_->GetBranch("jetsCmsTopTag_Phi")->SetAddress(&data.jetsCmsTopTag.Phi);
    tree_->GetBranch("jetsCmsTopTag_E")->SetAddress(&data.jetsCmsTopTag.E);
    tree_->GetBranch("jetsCmsTopTag_Charge")->SetAddress(&data.jetsCmsTopTag.Charge);
    tree_->GetBranch("jetsCmsTopTag_CSV")->SetAddress(&data.jetsCmsTopTag.CSV);
    tree_->GetBranch("jetsCmsTopTag_CSVV1")->SetAddress(&data.jetsCmsTopTag.CSVV1);
    tree_->GetBranch("jetsCmsTopTag_GenPartonY")->SetAddress(&data.jetsCmsTopTag.GenPartonY);
    tree_->GetBranch("jetsCmsTopTag_GenPartonEta")->SetAddress(&data.jetsCmsTopTag.GenPartonEta);
    tree_->GetBranch("jetsCmsTopTag_GenPartonPhi")->SetAddress(&data.jetsCmsTopTag.GenPartonPhi);
    tree_->GetBranch("jetsCmsTopTag_GenPartonPt")->SetAddress(&data.jetsCmsTopTag.GenPartonPt);
    tree_->GetBranch("jetsCmsTopTag_GenPartonE")->SetAddress(&data.jetsCmsTopTag.GenPartonE);
    tree_->GetBranch("jetsCmsTopTag_GenPartonCharge")->SetAddress(&data.jetsCmsTopTag.GenPartonCharge);
    tree_->GetBranch("jetsCmsTopTag_PartonFlavour")->SetAddress(&data.jetsCmsTopTag.PartonFlavour);
    tree_->GetBranch("jetsCmsTopTag_HadronFlavour")->SetAddress(&data.jetsCmsTopTag.HadronFlavour);
    tree_->GetBranch("jetsCmsTopTag_GenJetY")->SetAddress(&data.jetsCmsTopTag.GenJetY);
    tree_->GetBranch("jetsCmsTopTag_GenJetEta")->SetAddress(&data.jetsCmsTopTag.GenJetEta);
    tree_->GetBranch("jetsCmsTopTag_GenJetPhi")->SetAddress(&data.jetsCmsTopTag.GenJetPhi);
    tree_->GetBranch("jetsCmsTopTag_GenJetPt")->SetAddress(&data.jetsCmsTopTag.GenJetPt);
    tree_->GetBranch("jetsCmsTopTag_GenJetE")->SetAddress(&data.jetsCmsTopTag.GenJetE);
    tree_->GetBranch("jetsCmsTopTag_GenJetCharge")->SetAddress(&data.jetsCmsTopTag.GenJetCharge);
    tree_->GetBranch("jetsCmsTopTag_muonMultiplicity")->SetAddress(&data.jetsCmsTopTag.muonMultiplicity);
    tree_->GetBranch("jetsCmsTopTag_PhotonEnergy")->SetAddress(&data.jetsCmsTopTag.PhotonEnergy);
    tree_->GetBranch("jetsCmsTopTag_ElectronEnergy")->SetAddress(&data.jetsCmsTopTag.ElectronEnergy);
    tree_->GetBranch("jetsCmsTopTag_MuonEnergy")->SetAddress(&data.jetsCmsTopTag.MuonEnergy);
    tree_->GetBranch("jetsCmsTopTag_HFHadronEnergy")->SetAddress(&data.jetsCmsTopTag.HFHadronEnergy);
    tree_->GetBranch("jetsCmsTopTag_HFEMEnergy")->SetAddress(&data.jetsCmsTopTag.HFEMEnergy);
    tree_->GetBranch("jetsCmsTopTag_ChargedHadronMultiplicity")->SetAddress(&data.jetsCmsTopTag.ChargedHadronMultiplicity);
    tree_->GetBranch("jetsCmsTopTag_numberOfDaughters")->SetAddress(&data.jetsCmsTopTag.numberOfDaughters);
    tree_->GetBranch("jetsCmsTopTag_chargedMultiplicity")->SetAddress(&data.jetsCmsTopTag.chargedMultiplicity);
    tree_->GetBranch("jetsCmsTopTag_neutralHadronMultiplicity")->SetAddress(&data.jetsCmsTopTag.neutralHadronMultiplicity);
    tree_->GetBranch("jetsCmsTopTag_neutralHadronEnergy")->SetAddress(&data.jetsCmsTopTag.neutralHadronEnergy);
    tree_->GetBranch("jetsCmsTopTag_neutralEmEnergy")->SetAddress(&data.jetsCmsTopTag.neutralEmEnergy);
    tree_->GetBranch("jetsCmsTopTag_chargedEmEnergy")->SetAddress(&data.jetsCmsTopTag.chargedEmEnergy);
    tree_->GetBranch("jetsCmsTopTag_chargedHadronEnergy")->SetAddress(&data.jetsCmsTopTag.chargedHadronEnergy);
    tree_->GetBranch("jetsCmsTopTag_photonMultiplicity")->SetAddress(&data.jetsCmsTopTag.photonMultiplicity);
    tree_->GetBranch("jetsCmsTopTag_electronMultiplicity")->SetAddress(&data.jetsCmsTopTag.electronMultiplicity);
    tree_->GetBranch("jetsCmsTopTag_HFHadronMultiplicity")->SetAddress(&data.jetsCmsTopTag.HFHadronMultiplicity);
    tree_->GetBranch("jetsCmsTopTag_HFEMMultiplicity")->SetAddress(&data.jetsCmsTopTag.HFEMMultiplicity);
    tree_->GetBranch("jetsCmsTopTag_ChargeMuEnergy")->SetAddress(&data.jetsCmsTopTag.ChargeMuEnergy);
    tree_->GetBranch("jetsCmsTopTag_neutralMultiplicity")->SetAddress(&data.jetsCmsTopTag.neutralMultiplicity);
    tree_->GetBranch("jetsCmsTopTag_jecFactor0")->SetAddress(&data.jetsCmsTopTag.jecFactor0);
    tree_->GetBranch("jetsCmsTopTag_jetArea")->SetAddress(&data.jetsCmsTopTag.jetArea);
    tree_->GetBranch("jetsCmsTopTag_SmearedPt")->SetAddress(&data.jetsCmsTopTag.SmearedPt);
    tree_->GetBranch("jetsCmsTopTag_SmearedPEta")->SetAddress(&data.jetsCmsTopTag.SmearedPEta);
    tree_->GetBranch("jetsCmsTopTag_SmearedPhi")->SetAddress(&data.jetsCmsTopTag.SmearedPhi);
    tree_->GetBranch("jetsCmsTopTag_SmearedE")->SetAddress(&data.jetsCmsTopTag.SmearedE);
    tree_->GetBranch("jetsCmsTopTag_JERup")->SetAddress(&data.jetsCmsTopTag.JERup);
    tree_->GetBranch("jetsCmsTopTag_JERdown")->SetAddress(&data.jetsCmsTopTag.JERdown);
    tree_->GetBranch("jetsCmsTopTag_subjetIndex0")->SetAddress(&data.jetsCmsTopTag.subjetIndex0);
    tree_->GetBranch("jetsCmsTopTag_subjetIndex1")->SetAddress(&data.jetsCmsTopTag.subjetIndex1);
    tree_->GetBranch("jetsCmsTopTag_subjetIndex2")->SetAddress(&data.jetsCmsTopTag.subjetIndex2);
    tree_->GetBranch("jetsCmsTopTag_subjetIndex4")->SetAddress(&data.jetsCmsTopTag.subjetIndex3);
    tree_->GetBranch("jetsCmsTopTag_tau1")->SetAddress(&data.jetsCmsTopTag.tau1);
    tree_->GetBranch("jetsCmsTopTag_tau2")->SetAddress(&data.jetsCmsTopTag.tau2);
    tree_->GetBranch("jetsCmsTopTag_tau3")->SetAddress(&data.jetsCmsTopTag.tau3);
    tree_->GetBranch("jetsCmsTopTag_trimmedMass")->SetAddress(&data.jetsCmsTopTag.trimmedMass);
    tree_->GetBranch("jetsCmsTopTag_prunedMass")->SetAddress(&data.jetsCmsTopTag.prunedMass);
    tree_->GetBranch("jetsCmsTopTag_filteredMass")->SetAddress(&data.jetsCmsTopTag.filteredMass);
    tree_->GetBranch("jetsCmsTopTag_topMass")->SetAddress(&data.jetsCmsTopTag.topMass);
    tree_->GetBranch("jetsCmsTopTag_wMass")->SetAddress(&data.jetsCmsTopTag.wMass);
    tree_->GetBranch("jetsCmsTopTag_nSubJets")->SetAddress(&data.jetsCmsTopTag.nSubJets);
    tree_->GetBranch("jetsCmsTopTag_minmass")->SetAddress(&data.jetsCmsTopTag.minmass);
    if (debug) std::cout<<"B2GTreeReader: CMS top-tag jets loaded"<<std::endl;
    
    tree_->GetBranch("subjetAK8_size")->SetAddress(&data.subjetsAK8.size);
    tree_->GetBranch("subjetAK8_Mass")->SetAddress(&data.subjetsAK8.Mass);			
    tree_->GetBranch("subjetAK8_Pt")->SetAddress(&data.subjetsAK8.Pt);
    tree_->GetBranch("subjetAK8_Eta")->SetAddress(&data.subjetsAK8.Eta);
    tree_->GetBranch("subjetAK8_Y")->SetAddress(&data.subjetsAK8.Y);
    tree_->GetBranch("subjetAK8_Phi")->SetAddress(&data.subjetsAK8.Phi);
    tree_->GetBranch("subjetAK8_E")->SetAddress(&data.subjetsAK8.E);
    tree_->GetBranch("subjetAK8_Charge")->SetAddress(&data.subjetsAK8.Charge);
    tree_->GetBranch("subjetAK8_CSV")->SetAddress(&data.subjetsAK8.CSV);
    tree_->GetBranch("subjetAK8_CSVV1")->SetAddress(&data.subjetsAK8.CSVV1);
    tree_->GetBranch("subjetAK8_GenPartonY")->SetAddress(&data.subjetsAK8.GenPartonY);
    tree_->GetBranch("subjetAK8_GenPartonEta")->SetAddress(&data.subjetsAK8.GenPartonEta);
    tree_->GetBranch("subjetAK8_GenPartonPhi")->SetAddress(&data.subjetsAK8.GenPartonPhi);
    tree_->GetBranch("subjetAK8_GenPartonPt")->SetAddress(&data.subjetsAK8.GenPartonPt);
    tree_->GetBranch("subjetAK8_GenPartonE")->SetAddress(&data.subjetsAK8.GenPartonE);
    tree_->GetBranch("subjetAK8_GenPartonCharge")->SetAddress(&data.subjetsAK8.GenPartonCharge);
    tree_->GetBranch("subjetAK8_PartonFlavour")->SetAddress(&data.subjetsAK8.PartonFlavour);
    tree_->GetBranch("subjetAK8_HadronFlavour")->SetAddress(&data.subjetsAK8.HadronFlavour);
    tree_->GetBranch("subjetAK8_GenJetY")->SetAddress(&data.subjetsAK8.GenJetY);
    tree_->GetBranch("subjetAK8_GenJetEta")->SetAddress(&data.subjetsAK8.GenJetEta);
    tree_->GetBranch("subjetAK8_GenJetPhi")->SetAddress(&data.subjetsAK8.GenJetPhi);
    tree_->GetBranch("subjetAK8_GenJetPt")->SetAddress(&data.subjetsAK8.GenJetPt);
    tree_->GetBranch("subjetAK8_GenJetE")->SetAddress(&data.subjetsAK8.GenJetE);
    tree_->GetBranch("subjetAK8_GenJetCharge")->SetAddress(&data.subjetsAK8.GenJetCharge);
    tree_->GetBranch("subjetAK8_muonMultiplicity")->SetAddress(&data.subjetsAK8.muonMultiplicity);
    tree_->GetBranch("subjetAK8_PhotonEnergy")->SetAddress(&data.subjetsAK8.PhotonEnergy);
    tree_->GetBranch("subjetAK8_ElectronEnergy")->SetAddress(&data.subjetsAK8.ElectronEnergy);
    tree_->GetBranch("subjetAK8_MuonEnergy")->SetAddress(&data.subjetsAK8.MuonEnergy);
    tree_->GetBranch("subjetAK8_HFHadronEnergy")->SetAddress(&data.subjetsAK8.HFHadronEnergy);
    tree_->GetBranch("subjetAK8_HFEMEnergy")->SetAddress(&data.subjetsAK8.HFEMEnergy);
    tree_->GetBranch("subjetAK8_ChargedHadronMultiplicity")->SetAddress(&data.subjetsAK8.ChargedHadronMultiplicity);
    tree_->GetBranch("subjetAK8_numberOfDaughters")->SetAddress(&data.subjetsAK8.numberOfDaughters);
    tree_->GetBranch("subjetAK8_chargedMultiplicity")->SetAddress(&data.subjetsAK8.chargedMultiplicity);
    tree_->GetBranch("subjetAK8_neutralHadronMultiplicity")->SetAddress(&data.subjetsAK8.neutralHadronMultiplicity);
    tree_->GetBranch("subjetAK8_neutralHadronEnergy")->SetAddress(&data.subjetsAK8.neutralHadronEnergy);
    tree_->GetBranch("subjetAK8_neutralEmEnergy")->SetAddress(&data.subjetsAK8.neutralEmEnergy);
    tree_->GetBranch("subjetAK8_chargedEmEnergy")->SetAddress(&data.subjetsAK8.chargedEmEnergy);
    tree_->GetBranch("subjetAK8_chargedHadronEnergy")->SetAddress(&data.subjetsAK8.chargedHadronEnergy);
    tree_->GetBranch("subjetAK8_photonMultiplicity")->SetAddress(&data.subjetsAK8.photonMultiplicity);
    tree_->GetBranch("subjetAK8_electronMultiplicity")->SetAddress(&data.subjetsAK8.electronMultiplicity);
    tree_->GetBranch("subjetAK8_HFHadronMultiplicity")->SetAddress(&data.subjetsAK8.HFHadronMultiplicity);
    tree_->GetBranch("subjetAK8_HFEMMultiplicity")->SetAddress(&data.subjetsAK8.HFEMMultiplicity);
    tree_->GetBranch("subjetAK8_ChargeMuEnergy")->SetAddress(&data.subjetsAK8.ChargeMuEnergy);
    tree_->GetBranch("subjetAK8_neutralMultiplicity")->SetAddress(&data.subjetsAK8.neutralMultiplicity);
    tree_->GetBranch("subjetAK8_jecFactor0")->SetAddress(&data.subjetsAK8.jecFactor0);
    tree_->GetBranch("subjetAK8_jetArea")->SetAddress(&data.subjetsAK8.jetArea);
    tree_->GetBranch("subjetAK8_SmearedPt")->SetAddress(&data.subjetsAK8.SmearedPt);
    tree_->GetBranch("subjetAK8_SmearedPEta")->SetAddress(&data.subjetsAK8.SmearedPEta);
    tree_->GetBranch("subjetAK8_SmearedPhi")->SetAddress(&data.subjetsAK8.SmearedPhi);
    tree_->GetBranch("subjetAK8_SmearedE")->SetAddress(&data.subjetsAK8.SmearedE);
    tree_->GetBranch("subjetAK8_JERup")->SetAddress(&data.subjetsAK8.JERup);
    tree_->GetBranch("subjetAK8_JERdown")->SetAddress(&data.subjetsAK8.JERdown);
    if (debug) std::cout<<"B2GTreeReader: AK8 subjets loaded"<<std::endl;
    
    tree_->GetBranch("subjetsCmsTopTag_size")->SetAddress(&data.subjetsCmsTopTag.size);
    tree_->GetBranch("subjetsCmsTopTag_Mass")->SetAddress(&data.subjetsCmsTopTag.Mass);			
    tree_->GetBranch("subjetsCmsTopTag_Pt")->SetAddress(&data.subjetsCmsTopTag.Pt);
    tree_->GetBranch("subjetsCmsTopTag_Eta")->SetAddress(&data.subjetsCmsTopTag.Eta);
    tree_->GetBranch("subjetsCmsTopTag_Y")->SetAddress(&data.subjetsCmsTopTag.Y);
    tree_->GetBranch("subjetsCmsTopTag_Phi")->SetAddress(&data.subjetsCmsTopTag.Phi);
    tree_->GetBranch("subjetsCmsTopTag_E")->SetAddress(&data.subjetsCmsTopTag.E);
    tree_->GetBranch("subjetsCmsTopTag_Charge")->SetAddress(&data.subjetsCmsTopTag.Charge);
    tree_->GetBranch("subjetsCmsTopTag_CSV")->SetAddress(&data.subjetsCmsTopTag.CSV);
    tree_->GetBranch("subjetsCmsTopTag_CSVV1")->SetAddress(&data.subjetsCmsTopTag.CSVV1);
    tree_->GetBranch("subjetsCmsTopTag_GenPartonY")->SetAddress(&data.subjetsCmsTopTag.GenPartonY);
    tree_->GetBranch("subjetsCmsTopTag_GenPartonEta")->SetAddress(&data.subjetsCmsTopTag.GenPartonEta);
    tree_->GetBranch("subjetsCmsTopTag_GenPartonPhi")->SetAddress(&data.subjetsCmsTopTag.GenPartonPhi);
    tree_->GetBranch("subjetsCmsTopTag_GenPartonPt")->SetAddress(&data.subjetsCmsTopTag.GenPartonPt);
    tree_->GetBranch("subjetsCmsTopTag_GenPartonE")->SetAddress(&data.subjetsCmsTopTag.GenPartonE);
    tree_->GetBranch("subjetsCmsTopTag_GenPartonCharge")->SetAddress(&data.subjetsCmsTopTag.GenPartonCharge);
    tree_->GetBranch("subjetsCmsTopTag_PartonFlavour")->SetAddress(&data.subjetsCmsTopTag.PartonFlavour);
    tree_->GetBranch("subjetsCmsTopTag_HadronFlavour")->SetAddress(&data.subjetsCmsTopTag.HadronFlavour);
    tree_->GetBranch("subjetsCmsTopTag_GenJetY")->SetAddress(&data.subjetsCmsTopTag.GenJetY);
    tree_->GetBranch("subjetsCmsTopTag_GenJetEta")->SetAddress(&data.subjetsCmsTopTag.GenJetEta);
    tree_->GetBranch("subjetsCmsTopTag_GenJetPhi")->SetAddress(&data.subjetsCmsTopTag.GenJetPhi);
    tree_->GetBranch("subjetsCmsTopTag_GenJetPt")->SetAddress(&data.subjetsCmsTopTag.GenJetPt);
    tree_->GetBranch("subjetsCmsTopTag_GenJetE")->SetAddress(&data.subjetsCmsTopTag.GenJetE);
    tree_->GetBranch("subjetsCmsTopTag_GenJetCharge")->SetAddress(&data.subjetsCmsTopTag.GenJetCharge);
    tree_->GetBranch("subjetsCmsTopTag_muonMultiplicity")->SetAddress(&data.subjetsCmsTopTag.muonMultiplicity);
    tree_->GetBranch("subjetsCmsTopTag_PhotonEnergy")->SetAddress(&data.subjetsCmsTopTag.PhotonEnergy);
    tree_->GetBranch("subjetsCmsTopTag_ElectronEnergy")->SetAddress(&data.subjetsCmsTopTag.ElectronEnergy);
    tree_->GetBranch("subjetsCmsTopTag_MuonEnergy")->SetAddress(&data.subjetsCmsTopTag.MuonEnergy);
    tree_->GetBranch("subjetsCmsTopTag_HFHadronEnergy")->SetAddress(&data.subjetsCmsTopTag.HFHadronEnergy);
    tree_->GetBranch("subjetsCmsTopTag_HFEMEnergy")->SetAddress(&data.subjetsCmsTopTag.HFEMEnergy);
    tree_->GetBranch("subjetsCmsTopTag_ChargedHadronMultiplicity")->SetAddress(&data.subjetsCmsTopTag.ChargedHadronMultiplicity);
    tree_->GetBranch("subjetsCmsTopTag_numberOfDaughters")->SetAddress(&data.subjetsCmsTopTag.numberOfDaughters);
    tree_->GetBranch("subjetsCmsTopTag_chargedMultiplicity")->SetAddress(&data.subjetsCmsTopTag.chargedMultiplicity);
    tree_->GetBranch("subjetsCmsTopTag_neutralHadronMultiplicity")->SetAddress(&data.subjetsCmsTopTag.neutralHadronMultiplicity);
    tree_->GetBranch("subjetsCmsTopTag_neutralHadronEnergy")->SetAddress(&data.subjetsCmsTopTag.neutralHadronEnergy);
    tree_->GetBranch("subjetsCmsTopTag_neutralEmEnergy")->SetAddress(&data.subjetsCmsTopTag.neutralEmEnergy);
    tree_->GetBranch("subjetsCmsTopTag_chargedEmEnergy")->SetAddress(&data.subjetsCmsTopTag.chargedEmEnergy);
    tree_->GetBranch("subjetsCmsTopTag_chargedHadronEnergy")->SetAddress(&data.subjetsCmsTopTag.chargedHadronEnergy);
    tree_->GetBranch("subjetsCmsTopTag_photonMultiplicity")->SetAddress(&data.subjetsCmsTopTag.photonMultiplicity);
    tree_->GetBranch("subjetsCmsTopTag_electronMultiplicity")->SetAddress(&data.subjetsCmsTopTag.electronMultiplicity);
    tree_->GetBranch("subjetsCmsTopTag_HFHadronMultiplicity")->SetAddress(&data.subjetsCmsTopTag.HFHadronMultiplicity);
    tree_->GetBranch("subjetsCmsTopTag_HFEMMultiplicity")->SetAddress(&data.subjetsCmsTopTag.HFEMMultiplicity);
    tree_->GetBranch("subjetsCmsTopTag_ChargeMuEnergy")->SetAddress(&data.subjetsCmsTopTag.ChargeMuEnergy);
    tree_->GetBranch("subjetsCmsTopTag_neutralMultiplicity")->SetAddress(&data.subjetsCmsTopTag.neutralMultiplicity);
    tree_->GetBranch("subjetsCmsTopTag_jecFactor0")->SetAddress(&data.subjetsCmsTopTag.jecFactor0);
    tree_->GetBranch("subjetsCmsTopTag_jetArea")->SetAddress(&data.subjetsCmsTopTag.jetArea);
    tree_->GetBranch("subjetsCmsTopTag_SmearedPt")->SetAddress(&data.subjetsCmsTopTag.SmearedPt);
    tree_->GetBranch("subjetsCmsTopTag_SmearedPEta")->SetAddress(&data.subjetsCmsTopTag.SmearedPEta);
    tree_->GetBranch("subjetsCmsTopTag_SmearedPhi")->SetAddress(&data.subjetsCmsTopTag.SmearedPhi);
    tree_->GetBranch("subjetsCmsTopTag_SmearedE")->SetAddress(&data.subjetsCmsTopTag.SmearedE);
    tree_->GetBranch("subjetsCmsTopTag_JERup")->SetAddress(&data.subjetsCmsTopTag.JERup);
    tree_->GetBranch("subjetsCmsTopTag_JERdown")->SetAddress(&data.subjetsCmsTopTag.JERdown);
    if (debug) {
      std::cout<<"B2GTreeReader: CMS top-tag subjets loaded"<<std::endl;
      std::cout<<"B2GTreeReader: All objects loaded successfully"<<std::endl;
    }
  }
  
  Long64_t GetEntries() {
    return tree_->GetEntries(); 
  }
  Int_t GetEntry(Long64_t entry, Int_t getall = 0) {
    Int_t result = tree_->GetEntry(entry,getall);
    //if (data.gen.size>1) std::cout<<"B2GReader Warning!!: Size of Data object too small for gen."<<std::endl;
    if (data.ele.size>NLEP) std::cout<<"B2GReader Warning!!: Size of Data object too small for ele. Set NLEP>="<<data.ele.size<<std::endl;
    if (data.mu.size>NLEP) std::cout<<"B2GReader Warning!!: Size of Data object too small for mu. Set NLEP>="<<data.mu.size<<std::endl;
    if (data.jetsAK4.size>NJET) std::cout<<"B2GReader Warning!!: Size of Data object too small for jetsAK4. Set NJET>="<<data.jetsAK4.size<<std::endl;
    if (data.jetsAK8.size>NJET) std::cout<<"B2GReader Warning!!: Size of Data object too small for jetsAk8. Set NJET>="<<data.jetsAK8.size<<std::endl;
    if (data.jetsCmsTopTag.size>NJET) std::cout<<"B2GReader Warning!!: Size of Data object too small for jetsCmsTopTag. Set NJET>="<<data.jetsCmsTopTag.size<<std::endl;
    if (data.subjetsAK8.size>NJET) std::cout<<"B2GReader Warning!!: Size of Data object too small for subjetsAK8. Set NJET>="<<data.subjetsAK8.size<<std::endl;
    if (data.subjetsCmsTopTag.size>NJET) std::cout<<"B2GReader Warning!!: Size of Data object too small for subjetsCmsTopTag. Set NJET>="<<data.subjetsCmsTopTag.size<<std::endl;
    return result;
  }
  
private: 
  TTree* tree_;
  
};

#endif
